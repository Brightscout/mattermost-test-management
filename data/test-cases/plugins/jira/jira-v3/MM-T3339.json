{
  "id": 6827990,
  "key": "MM-T3339",
  "name": "Add subscription from multiple Jira instances",
  "createdOn": "2020-08-31T14:24:05Z",
  "objective": null,
  "precondition": null,
  "estimatedTime": null,
  "labels": [],
  "customFields": {
    "Playwright": null,
    "Authors": "",
    "Priority P1 to P4": null,
    "Update notes": "",
    "Rainforest": ["Evaluating"],
    "Team Ownership": ["Integration Frameworks"],
    "Manual Test Environments": ["Desktop"],
    "Detox": null,
    "Cypress": "Ticket Open",
    "MMCTL": null,
    "Last Updated": "",
    "Tags": ["Never tested"],
    "Location": "Jira"
  },
  "componentName": null,
  "priorityName": "Low",
  "statusName": "Active",
  "folderName": "Jira V3",
  "folderFullPath": "plugins/jira/jira-v3",
  "steps": [
    { "inline": null, "testCase": { "testCaseKey": "MM-T3321" } },
    {
      "inline": {
        "description": "1. Connect the test user to 2 instances ex <em>Instance A</em> and <em>Instance B</em><br>2. Create subscription webhooks in both Jira instances that are pointed at your Mattermost Server",
        "testData": null,
        "expectedResult": "Test user is connected to 2 Jira instances which have webhooks configured<br><br>",
        "customFields": {
          "Fix Versions": [],
          "Related ticket(s)": "",
          "Important notes about this step": ""
        }
      },
      "testCase": null
    },
    {
      "inline": {
        "description": "1<em>.&nbsp;</em>Ensure the user is a system admin<br>2. Type <em>/jira subscribe edit</em><br>3. Click add<em>&nbsp;</em><br>4. Create a subscription that delivers events form Jira <em>Instance A</em><br>5. Create a subscription that delivers events form Jira <em>Instance B</em>",
        "testData": null,
        "expectedResult": "Subscriptions are saved",
        "customFields": {
          "Fix Versions": [],
          "Related ticket(s)": "",
          "Important notes about this step": ""
        }
      },
      "testCase": null
    },
    {
      "inline": {
        "description": "1. Login Jira <em>Instance A&nbsp;</em><br>2. Create or update an issue such that the subscription created in step 3. will deliver an event.",
        "testData": null,
        "expectedResult": "The event is delivered to the channel where the subscription was created&nbsp;",
        "customFields": {
          "Fix Versions": [],
          "Related ticket(s)": "",
          "Important notes about this step": ""
        }
      },
      "testCase": null
    },
    {
      "inline": {
        "description": "1. Login Jira <em>Instance B&nbsp;</em><br>2. Create or update an issue such that the subscription created in step 3. will deliver an event.",
        "testData": null,
        "expectedResult": "The event is delivered to the channel where the subscription was created&nbsp;",
        "customFields": {
          "Fix Versions": [],
          "Related ticket(s)": "",
          "Important notes about this step": ""
        }
      },
      "testCase": null
    }
  ],
  "caseHashed": "9abf2789d8c4e3b8f22d3deb9c9f3672e2d6366c2186480fec6588131c9f4ead22be5244fb4e2b95f9347ecf1e108053",
  "stepsHashed": "7adf732a4d4ecd655fa95caa4bc081150a42a4c80af86f60d79b6737f938078de1a188a46686ccf226314386dfee4e4e"
}
