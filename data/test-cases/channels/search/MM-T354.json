{
  "id": 3877456,
  "key": "MM-T354",
  "name": "No unexpected highlighting when searching with double quotes",
  "createdOn": "2020-01-02T23:12:25Z",
  "objective": null,
  "precondition": null,
  "estimatedTime": null,
  "labels": ["rf-cloud-webapp", "search"],
  "component": null,
  "priority": { "id": 401951, "name": "Low" },
  "status": { "id": 890281, "name": "Active" },
  "folder": {
    "id": 404335,
    "name": "Search",
    "parentId": 3142963,
    "fullNames": ["Channels", "Search"],
    "fullPath": "channels/search"
  },
  "customFields": {
    "Fix Versions": [],
    "Playwright": null,
    "Authors": "",
    "Priority P1 to P4": "P3 - Deep Functions (Do extensive scenarios work?)",
    "Update notes": "",
    "Rainforest": ["Webapp", "in Production"],
    "Cypress Reports": null,
    "Team Ownership": ["Channels"],
    "Manual Test Environments": [],
    "Detox": null,
    "Cypress": "To Do",
    "MMCTL": null,
    "Last Updated": "",
    "Selenium": null,
    "Tags": [],
    "Location": "Search"
  },
  "steps": [
    {
      "inline": {
        "description": "<ol><li>In a test channel, post the paragraph to the right:</li><li>Search for the following: (that's 2 quotes at the end)<ul><li>test tool \"\"</li></ul></li></ol>",
        "testData": "do you know a tool for detecting SQLi in a whole website¬ø? I mean, I want it to crawl it and then just test a few payloads (', %27, waitfor delay '0:0:05') , and detect which URL, parameter is vulnerable. Best thing I found is this thing https://nmap.org/nsedoc/scripts/http-sql-injection.html but doesn't work like a charm",
        "expectedResult": "<ul><li>The message you just posted should be returned in search results with the words \"test\" and \"tool\" highlighted.</li><li>The URL should NOT be highlighted.</li></ul>",
        "customFields": {
          "Fix Versions": [],
          "Related ticket(s)": "",
          "Important notes about this step": ""
        }
      },
      "testCase": null
    }
  ],
  "caseHashed": "432285070d8e6356b96dc904bc1f58d9f3e29ea2f171dad507e19b8aee3fe2e34c6f553308fc3399b7f3af221785a86c",
  "stepsHashed": "1c3d9a1a210565bdac61a6e66bff3b8ea9b132e9080d4c82c90c5f941f1fdca14512c021c4ab136dfd2bd994b94d7e10"
}
